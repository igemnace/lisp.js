const standardEnv = () => ({
  pi: Math.PI,
  '+': (a, b) => a + b,
  '-': (a, b) => a - b,
  '*': (a, b) => a * b,
  '/': (a, b) => a / b,
  '>': (a, b) => a > b,
  '<': (a, b) => a < b,
  '>=': (a, b) => a >= b,
  '<=': (a, b) => a <= b,
  '=': (a, b) => a === b,
  abs: Math.abs,
  append: (a, b) => a + b,
  apply: (fn, args) => fn(...args),
  begin: (...args) => args.pop(),
  car: list => list[0],
  cdr: list => list.slice(1),
  cons: (a, b) => [a, b],
  'eq?': (a, b) => a === b,
  expt: Math.pow,
  equal: (a, b) => a === b,
  length: a => a.length,
  list: (...args) => args,
  'list?': a => Array.isArray(a),
  map: (...args) => Array.prototype.map.call(...args),
  max: Math.max,
  min: Math.min,
  not: a => !a,
  'null?': a => Array.isArray(a) && a.length === 0,
  'number?': a => typeof a === 'number' || a instanceof Number,
  print: (...args) => console.log(...args),
  'procedure?': a => a instanceof Function,
  round: Math.round,
  'symbol?': a => typeof a === 'string' || a instanceof String,
});

module.exports = {
  globalEnv: standardEnv(),
};
